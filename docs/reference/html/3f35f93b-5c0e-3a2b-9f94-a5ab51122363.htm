<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Vcf.DeserializeAsync(Func&lt;CancellationToken, Task&lt;Stream&gt;&gt;, AnsiFilter, CancellationToken) Method</title><meta name="Title" content="DeserializeAsync(Func&lt;CancellationToken, Task&lt;Stream&gt;&gt;, AnsiFilter, CancellationToken)" /><meta name="Help.Id" content="M:FolkerKinzel.VCards.Vcf.DeserializeAsync(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.IO.Stream}},FolkerKinzel.VCards.AnsiFilter,System.Threading.CancellationToken)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.VCards" /><meta name="guid" content="3f35f93b-5c0e-3a2b-9f94-a5ab51122363" /><meta name="Description" content="Deserializes a of VCF data and selects the correct automatically in an asynchronous operation." /><meta name="tocFile" content="../toc/IDCAJAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.VCards</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Vcf<span id="LST40948856_0" data-languageSpecificText="cpp=::|nu=."></span>Deserialize<wbr />Async(Func<span id="LST40948856_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Cancellation<wbr />Token, Task<span id="LST40948856_2" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Stream<span id="LST40948856_3" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST40948856_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Ansi<wbr />Filter, Cancellation<wbr />Token) Method</h1><div class="summary">
            Deserializes a <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a> of VCF data and selects the correct <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a>
            automatically in an asynchronous operation.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="67dce261-ab8f-dd0a-4c0c-bc2633c1719e.htm">FolkerKinzel.VCards</a><br /><strong>Assembly:</strong> FolkerKinzel.VCards (in FolkerKinzel.VCards.dll) Version: 8.1.0-beta.1+35df26c0229e0fbebf667c7cf238351ddbffba8a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Task</span>&lt;<span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">VCard</span>&gt;&gt; <span class="identifier">DeserializeAsync</span>(
	<span class="identifier">Func</span>&lt;<span class="identifier">CancellationToken</span>, <span class="identifier">Task</span>&lt;<span class="identifier">Stream</span>&gt;&gt; <span class="parameter">factory</span>,
	<span class="identifier">AnsiFilter</span> <span class="parameter">filter</span>,
	<span class="identifier">CancellationToken</span> <span class="parameter">token</span> = <span class="keyword">default</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">DeserializeAsync</span> ( 
	<span class="parameter">factory</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">CancellationToken</span>, <span class="identifier">Task</span>(<span class="keyword">Of</span> <span class="identifier">Stream</span>)),
	<span class="parameter">filter</span> <span class="keyword">As</span> <span class="identifier">AnsiFilter</span>,
	Optional <span class="parameter">token</span> <span class="keyword">As</span> <span class="identifier">CancellationToken</span> = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">Task</span>(<span class="keyword">Of</span> <span class="identifier">IReadOnlyList</span>(<span class="keyword">Of</span> <span class="identifier">VCard</span>))</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="identifier">Task</span>&lt;<span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">VCard</span>^&gt;^&gt;^ <span class="identifier">DeserializeAsync</span>(
	<span class="identifier">Func</span>&lt;<span class="identifier">CancellationToken</span>, <span class="identifier">Task</span>&lt;<span class="identifier">Stream</span>^&gt;^&gt;^ <span class="parameter">factory</span>, 
	<span class="identifier">AnsiFilter</span>^ <span class="parameter">filter</span>, 
	<span class="identifier">CancellationToken</span> <span class="parameter">token</span> = <span class="identifier">CancellationToken</span>()
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">DeserializeAsync</span> : 
        <span class="parameter">factory</span> : <span class="identifier">Func</span>&lt;<span class="identifier">CancellationToken</span>, <span class="identifier">Task</span>&lt;<span class="identifier">Stream</span>&gt;&gt; * 
        <span class="parameter">filter</span> : <span class="identifier">AnsiFilter</span> * 
        ?<span class="parameter">token</span> : <span class="identifier">CancellationToken</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">token</span> = defaultArg <span class="identifier">token</span> new <span class="identifier">CancellationToken</span>()
*)
<span class="keyword">-&gt;</span> <span class="identifier">Task</span>&lt;<span class="identifier">IReadOnlyList</span>&lt;<span class="identifier">VCard</span>&gt;&gt; </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">factory</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST40948856_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a>, <a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noopener noreferrer">Task</a><span id="LST40948856_6" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a><span id="LST40948856_7" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST40948856_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>A function that takes a <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a> as
            argument and returns a <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a> of VCF data as an 
            asynchronous operation.</dd><dt class="has-text-weight-normal"><span class="parameter">filter</span>  <a href="ca4f9ae6-422e-3a83-0b64-fc82ba7c1b4a.htm">AnsiFilter</a></dt><dd>An <a href="ca4f9ae6-422e-3a83-0b64-fc82ba7c1b4a.htm">AnsiFilter</a> instance.</dd><dt class="has-text-weight-normal"><span class="parameter">token</span>  <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noopener noreferrer">CancellationToken</a>  (Optional)</dt><dd>A cancellation token that can be used by other objects or threads to 
            receive notice of cancellation.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noopener noreferrer">Task</a><span id="LST40948856_9" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1" target="_blank" rel="noopener noreferrer">IReadOnlyList</a><span id="LST40948856_10" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a><span id="LST40948856_11" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><span id="LST40948856_12" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />The task object representing the asynchronous operation.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDFCSection"><p><a href="ca4f9ae6-422e-3a83-0b64-fc82ba7c1b4a.htm">AnsiFilter</a> only recognizes one <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a> per <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a>.
            This means that if a <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a> contains VCF data with different <a href="https://learn.microsoft.com/dotnet/api/system.text.encoding" target="_blank" rel="noopener noreferrer">Encoding</a>s, 
            decoding errors may occur.
            </p><p>
            Any <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a>s that are used within the method will be closed when the method 
            completes.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDGCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.VCards;

namespace Examples;

public static class WebExample
{
    private const string URI =
        "https://raw.githubusercontent.com/FolkerKinzel/VCards/master/src/Examples/AnsiFilterExamples/German.vcf";

    private static readonly HttpClient _client = new();

    public static async Task AsyncExample()
    {
        using var cts = new CancellationTokenSource();

        IReadOnlyList&lt;VCard&gt; vc = await Vcf.DeserializeAsync(t =&gt; _client.GetStreamAsync(URI, t),
                                                     new AnsiFilter(),
                                                     cts.Token);
        Console.WriteLine(vc[0]);
    }

    public static void SynchronousExample()
    {
        using HttpResponseMessage response =
            _client.Send(new HttpRequestMessage(HttpMethod.Get, URI));

        IReadOnlyList&lt;VCard&gt; vc = Vcf.Deserialize(() =&gt; response.Content.ReadAsStream(),
                                          new AnsiFilter());
        Console.WriteLine(vc[0]);
    }
}

/*
Console Output:

Version: 2.1

DisplayNames: Sören Täve Nüßlebaum

NameViews:
    FamilyNames:     Nüßlebaum
    GivenNames:      Sören
    AdditionalNames: Täve

[Label: Mößlitz]
[CharSet: Windows-1252]
Addresses: Locality: Mößlitz
 */</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDHCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">factory</span> or 
            <span class="parameter">filter</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td>The <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a> that <span class="parameter">factory</span> 
            returns asynchronously doesn't support reading.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noopener noreferrer">ObjectDisposedException</a></td><td><span class="parameter">factory</span> returns a closed stream.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td> The method could not read from the <a href="https://learn.microsoft.com/dotnet/api/system.io.stream" target="_blank" rel="noopener noreferrer">Stream</a>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="776cc866-d81c-94ea-6b2e-9256ed03ad3b.htm">Vcf Class</a></div><div><a href="47759818-96e0-75ad-6ccb-0438240623cd.htm">DeserializeAsync Overload</a></div><div><a href="67dce261-ab8f-dd0a-4c0c-bc2633c1719e.htm">FolkerKinzel.VCards Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>