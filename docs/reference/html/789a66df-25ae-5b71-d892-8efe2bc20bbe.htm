<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IEnumerableExtension.ToVcfString Method</title><meta name="Title" content="ToVcfString" /><meta name="Help.Id" content="M:FolkerKinzel.VCards.Extensions.IEnumerableExtension.ToVcfString(System.Collections.Generic.IEnumerable{FolkerKinzel.VCards.VCard},FolkerKinzel.VCards.Enums.VCdVersion,FolkerKinzel.VCards.ITimeZoneIDConverter,FolkerKinzel.VCards.Enums.VcfOpts)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.VCards.Extensions" /><meta name="guid" content="789a66df-25ae-5b71-d892-8efe2bc20bbe" /><meta name="Description" content="Serializes as a , which represents the content of a VCF file." /><meta name="tocFile" content="../toc/IDABDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.VCards</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>IEnumerable<wbr />Extension<span id="LSTB0B8F8D6_0" data-languageSpecificText="cpp=::|nu=."></span>To<wbr />Vcf<wbr />String Method</h1><div class="summary">Serializes <span class="parameter">vCards</span> as a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>, which
            represents the content of a VCF file.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="ea6bb853-85f2-e58b-0429-68b3fa762c9a.htm">FolkerKinzel.VCards.Extensions</a><br /><strong>Assembly:</strong> FolkerKinzel.VCards (in FolkerKinzel.VCards.dll) Version: 8.1.0+9753915cd0f8006e7e5b4f62aa63aa3651006f06<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">string</span> <span class="identifier">ToVcfString</span>(
	<span class="keyword">this</span> <span class="identifier">IEnumerable</span>&lt;<span class="identifier">VCard</span>?&gt; <span class="parameter">vCards</span>,
	<span class="identifier">VCdVersion</span> <span class="parameter">version</span> = <span class="identifier">VCdVersion</span>.V3_0,
	<span class="identifier">ITimeZoneIDConverter</span>? <span class="parameter">tzConverter</span> = <span class="keyword">null</span>,
	<span class="identifier">VcfOpts</span> <span class="parameter">options</span> = <span class="identifier">VcfOpts</span>.Default
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">ToVcfString</span> ( 
	<span class="parameter">vCards</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">VCard</span>),
	Optional <span class="parameter">version</span> <span class="keyword">As</span> <span class="identifier">VCdVersion</span> = <span class="identifier">VCdVersion</span>.V3_0,
	Optional <span class="parameter">tzConverter</span> <span class="keyword">As</span> <span class="identifier">ITimeZoneIDConverter</span> = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">options</span> <span class="keyword">As</span> <span class="identifier">VcfOpts</span> = <span class="identifier">VcfOpts</span>.Default
) <span class="keyword">As</span> <span class="identifier">String</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="identifier">String</span>^ <span class="identifier">ToVcfString</span>(
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">VCard</span>^&gt;^ <span class="parameter">vCards</span>, 
	<span class="identifier">VCdVersion</span> <span class="parameter">version</span> = <span class="identifier">VCdVersion</span>::V3_0, 
	<span class="identifier">ITimeZoneIDConverter</span>^ <span class="parameter">tzConverter</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">VcfOpts</span> <span class="parameter">options</span> = <span class="identifier">VcfOpts</span>::Default
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">ToVcfString</span> : 
        <span class="parameter">vCards</span> : <span class="identifier">IEnumerable</span>&lt;<span class="identifier">VCard</span>&gt; * 
        ?<span class="parameter">version</span> : <span class="identifier">VCdVersion</span> * 
        ?<span class="parameter">tzConverter</span> : <span class="identifier">ITimeZoneIDConverter</span> * 
        ?<span class="parameter">options</span> : <span class="identifier">VcfOpts</span> 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">version</span> = defaultArg <span class="identifier">version</span> <span class="identifier">VCdVersion</span>.V3_0
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">tzConverter</span> = defaultArg <span class="identifier">tzConverter</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">options</span> = defaultArg <span class="identifier">options</span> <span class="identifier">VcfOpts</span>.Default
*)
<span class="keyword">-&gt;</span> <span class="identifier">string</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">vCards</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LSTB0B8F8D6_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a><span id="LSTB0B8F8D6_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The <a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a> objects to be serialized. The
            collection may be empty or may contain <span class="code">null</span> values.</dd><dt class="has-text-weight-normal"><span class="parameter">version</span>  <a href="ac9fdf40-2b0d-b8c5-e766-f1a99a67bfbc.htm">VCdVersion</a>  (Optional)</dt><dd>The vCard version used for the serialization.</dd><dt class="has-text-weight-normal"><span class="parameter">tzConverter</span>  <a href="447e2c96-b59d-3811-0458-087d1a02e115.htm">ITimeZoneIDConverter</a>  (Optional)</dt><dd>An object that implements <a href="447e2c96-b59d-3811-0458-087d1a02e115.htm">ITimeZoneIDConverter</a> to convert IANA time zone names to UTC offsets, or <span class="code">null</span>.</dd><dt class="has-text-weight-normal"><span class="parameter">options</span>  <a href="67ebdff1-3dc8-8be7-63bc-f0f7006e9265.htm">VcfOpts</a>  (Optional)</dt><dd>Options for serializing VCF. The flags can be combined.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a><br /><span class="parameter">vCards</span>, serialized as a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>,
            which represents the content of a VCF file.<h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable</a><span id="LSTB0B8F8D6_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a><span id="LSTB0B8F8D6_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDGCSection"><article class="message is-warning"><div class="message-header"><p><span class="icon"><i class="fa fa-warning"></i></span>  Caution</p></div><div class="message-body">
            Although the method itself is thread-safe, the <a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a> objects
            passed to the method are not. Block read and write access to these <a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a> objects, while this method is being executed!
            </div></article><p>
            The method may serialize more vCards than the number of elements in the collection passed 
            to the <span class="parameter">vCards</span> parameter. This can happen if there are embedded 
            <a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a> objects in the <a href="ed536746-8d78-03fa-a6c8-94cc04b1e3c0.htm">Members</a> or 
            <a href="dd88778d-2741-7f5e-33a2-1ce764d4da37.htm">Relations</a> properties.
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDHCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.VCards;
using FolkerKinzel.VCards.Enums;
using FolkerKinzel.VCards.Extensions;
using FolkerKinzel.VCards.Models.Properties;

namespace Examples;

public class ExtensionMethodExample
{
    public static void Example()
    {
        VCard vc = InitializeTestVCard();

        Console.WriteLine("The content of vc is:\n");
        Console.WriteLine(vc);
        Console.WriteLine("\n=====================================\n");

        // (The extension methods will do all the necerssary
        // null checking.)

        // Group properties by their group name. (Group names are
        // case insensitive.)
        Console.WriteLine("\nProperty values with the group name g1:");

        IGrouping&lt;string?, KeyValuePair&lt;Prop, VCardProperty&gt;&gt; g1Group =
            vc.Groups.First(x =&gt; x.Key == "g1");

        foreach (KeyValuePair&lt;Prop, VCardProperty&gt; kvp in g1Group)
        {
            Console.WriteLine("  {0}: {1}", kvp.Key, kvp.Value);
        }
        ;

        Console.WriteLine("\nDisplayNames ordered by Preference:");
        foreach (TextProperty dn in vc.DisplayNames.OrderByPref())
        {
            Console.WriteLine("  {0}", dn);
        }

        Console.WriteLine("\nThe most preferred DisplayName is: {0}", vc.DisplayNames.PrefOrNull());

        Console.WriteLine("\nDisplayNames ordered by Index:");
        foreach (TextProperty dn in vc.DisplayNames.OrderByIndex())
        {
            Console.WriteLine("  {0}", dn);
        }

        Console.WriteLine("\nThe DisplayName with the lowest Index is: {0}", vc.DisplayNames.FirstOrNull());

        // Group VCardProperties by their AltID parameter:
        Console.WriteLine("\nThe following display names mean the same in different languages:");

        IGrouping&lt;string?, TextProperty&gt; altIDQuery =
            vc.DisplayNames.GroupByAltID()
                           .First(x =&gt; x.Key == "@1");

        foreach (TextProperty prop in altIDQuery)
        {
            Console.WriteLine("  {0}", prop);
        }

        // Serialize the VCard as VCF. (Most of the methods of the Vcf class are also
        // available as extension methods.)
        Console.WriteLine("\nvc as vCard 3.0:\n");
        Console.WriteLine(vc.ToVcfString(options: VcfOpts.Default.Unset(VcfOpts.UpdateTimeStamp)));
    }

    private static VCard InitializeTestVCard()
    {
        return VCardBuilder
            .Create(setContactID: false)
            .DisplayNames.Add("vCard zum Testen",
                               parameters:
                               p =&gt;
                               {
                                   p.Language = "de";
                                   p.AltID = "@1";
                                   p.Index = 2;
                               }
                             )
            .DisplayNames.Add("vCard for testing",
                               parameters:
                               p =&gt;
                               {
                                   p.Language = "en";
                                   p.AltID = "@1";
                               }
                             )
            .DisplayNames.Add("Something else",
                               parameters: p =&gt; p.Index = 1
                             )
            // The properties of the VCard class that contain collections allow
            // null references within these collections. Extension methods undertake
            // the necessary null checking when reading these properties:
            .DisplayNames.Edit(dplayNames =&gt; dplayNames.Append(null))
            .Phones.Add("1234",
                        // The ParameterSection.PropertyClass property is of Type
                        // Nullable&lt;PCl&gt;. Use extension methods to edit such properties
                        // safely.
                        parameters: p =&gt; p.PropertyClass = p.PropertyClass.Set(PCl.Home),
                        group: vc =&gt; "g1"
                        )
            .TimeZones.Add("Europe/Berlin", group: vc =&gt; "G1")
            .VCard;
    }
}

/*
Console Output:

The content of vc is:

Version: 2.1

[Preference: 1]
[Language: en]
[AltID: @1]
DisplayNames: vCard for testing

[Preference: 2]
[Language: de]
[AltID: @1]
[Index: 2]
DisplayNames: vCard zum Testen

[Index: 1]
DisplayNames: Something else

[Group: G1]
TimeZones: Europe/Berlin

[PropertyClass: Home]
[Group: g1]
Phones: 1234

=====================================


Property values with the group name g1:
  Phones: 1234
  TimeZones: Europe/Berlin

DisplayNames ordered by Preference:
  vCard for testing
  vCard zum Testen
  Something else

The most preferred DisplayName is: vCard for testing

DisplayNames ordered by Index:
  Something else
  vCard zum Testen
  vCard for testing

The DisplayName with the lowest Index is: Something else

The following display names mean the same in different languages:
  vCard for testing
  vCard zum Testen

vc as vCard 3.0:

BEGIN:VCARD
VERSION:3.0
G1.TZ:+01:00
FN;LANGUAGE=en:vCard for testing
N:?;;;;
g1.TEL;TYPE=HOME:1234
END:VCARD
 */</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDKCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">vCards</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noopener noreferrer">ArgumentOutOfRangeException</a></td><td><span class="parameter">version</span> is not a defined value of the <a href="67ebdff1-3dc8-8be7-63bc-f0f7006e9265.htm">VcfOpts</a> 
            enum.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.outofmemoryexception" target="_blank" rel="noopener noreferrer">OutOfMemoryException</a></td><td>The system is out of memory.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="c35d9134-4046-9ae5-662b-f2be39e4b469.htm">IEnumerableExtension Class</a></div><div><a href="ea6bb853-85f2-e58b-0429-68b3fa762c9a.htm">FolkerKinzel.VCards.Extensions Namespace</a></div><div><a href="a125114b-891a-c405-2778-d00dd0309ae2.htm">AsString(IEnumerable<span id="LSTB0B8F8D6_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>VCard<span id="LSTB0B8F8D6_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, VCdVersion, ITimeZoneIDConverter, VcfOpts)</a></div><div><a href="447e2c96-b59d-3811-0458-087d1a02e115.htm">ITimeZoneIDConverter</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>