<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>TimeZoneBuilder.Add(String, Action&lt;ParameterSection&gt;, Func&lt;VCard, String&gt;) Method</title><meta name="Title" content="Add(String, Action&lt;ParameterSection&gt;, Func&lt;VCard, String&gt;)" /><meta name="Help.Id" content="M:FolkerKinzel.VCards.BuilderParts.TimeZoneBuilder.Add(System.String,System.Action{FolkerKinzel.VCards.Models.Properties.Parameters.ParameterSection},System.Func{FolkerKinzel.VCards.VCard,System.String})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.VCards.BuilderParts" /><meta name="guid" content="583e8ba1-f39c-f3f2-f2a2-7e4e57c05f71" /><meta name="Description" content="Adds a instance, which is newly initialized using the specified , which represents an identifier from the &quot;IANA Time Zone Database&quot;, to the property. (See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones ." /><meta name="tocFile" content="../toc/IDAATBA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.VCards</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Time<wbr />Zone<wbr />Builder<span id="LST4DC32A8D_0" data-languageSpecificText="cpp=::|nu=."></span>Add(String, Action<span id="LST4DC32A8D_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>Parameter<wbr />Section<span id="LST4DC32A8D_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Func<span id="LST4DC32A8D_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>VCard, String<span id="LST4DC32A8D_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>) Method</h1><div class="summary">
            Adds a <a href="f2a465e3-201c-901f-3c9a-416e5fa3825a.htm">TimeZoneProperty</a> instance, which is newly 
            initialized using the specified <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a>, which represents an identifier
            from the "IANA Time Zone Database", to the <a href="c07b682f-3b8b-4eff-9286-88369a03a691.htm">TimeZones</a> property.
            (See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones .)
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="30716183-7f69-ceb8-b5fe-4d9f23e7fd2b.htm">FolkerKinzel.VCards.BuilderParts</a><br /><strong>Assembly:</strong> FolkerKinzel.VCards (in FolkerKinzel.VCards.dll) Version: 8.1.0-beta.1+35df26c0229e0fbebf667c7cf238351ddbffba8a<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="identifier">VCardBuilder</span> <span class="identifier">Add</span>(
	<span class="identifier">string</span> <span class="parameter">value</span>,
	<span class="identifier">Action</span>&lt;<span class="identifier">ParameterSection</span>&gt;? <span class="parameter">parameters</span> = <span class="keyword">null</span>,
	<span class="identifier">Func</span>&lt;<span class="identifier">VCard</span>, <span class="identifier">string</span>?&gt;? <span class="parameter">group</span> = <span class="keyword">null</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Add</span> ( 
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	Optional <span class="parameter">parameters</span> <span class="keyword">As</span> <span class="identifier">Action</span>(<span class="keyword">Of</span> <span class="identifier">ParameterSection</span>) = <span class="keyword">Nothing</span>,
	Optional <span class="parameter">group</span> <span class="keyword">As</span> <span class="identifier">Func</span>(<span class="keyword">Of</span> <span class="identifier">VCard</span>, <span class="identifier">String</span>) = <span class="keyword">Nothing</span>
) <span class="keyword">As</span> <span class="identifier">VCardBuilder</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="identifier">VCardBuilder</span>^ <span class="identifier">Add</span>(
	<span class="identifier">String</span>^ <span class="parameter">value</span>, 
	<span class="identifier">Action</span>&lt;<span class="identifier">ParameterSection</span>^&gt;^ <span class="parameter">parameters</span> = <span class="keyword">nullptr</span>, 
	<span class="identifier">Func</span>&lt;<span class="identifier">VCard</span>^, <span class="identifier">String</span>^&gt;^ <span class="parameter">group</span> = <span class="keyword">nullptr</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">member</span> <span class="identifier">Add</span> : 
        <span class="parameter">value</span> : <span class="identifier">string</span> * 
        ?<span class="parameter">parameters</span> : <span class="identifier">Action</span>&lt;<span class="identifier">ParameterSection</span>&gt; * 
        ?<span class="parameter">group</span> : <span class="identifier">Func</span>&lt;<span class="identifier">VCard</span>, <span class="identifier">string</span>&gt; 
(* Defaults:
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">parameters</span> = defaultArg <span class="identifier">parameters</span> <span class="keyword">null</span>
        <span class="keyword">let </span><span class="identifier">_</span><span class="identifier">group</span> = defaultArg <span class="identifier">group</span> <span class="keyword">null</span>
*)
<span class="keyword">-&gt;</span> <span class="identifier">VCardBuilder</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">value</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>A <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> that represents an identifier
            from the "IANA Time Zone Database".</dd><dt class="has-text-weight-normal"><span class="parameter">parameters</span>  <a href="https://learn.microsoft.com/dotnet/api/system.action-1" target="_blank" rel="noopener noreferrer">Action</a><span id="LST4DC32A8D_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="0eb22901-c3a6-cd14-e5b9-8a5230e44ff2.htm">ParameterSection</a><span id="LST4DC32A8D_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  (Optional)</dt><dd>An <a href="https://learn.microsoft.com/dotnet/api/system.action-1" target="_blank" rel="noopener noreferrer">Action<span id="LST4DC32A8D_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST4DC32A8D_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> delegate that's invoked with the 
            <a href="0eb22901-c3a6-cd14-e5b9-8a5230e44ff2.htm">ParameterSection</a> of the newly created <a href="93f4ddcf-053e-4f78-a4b7-c0ed9ef1e6fd.htm">VCardProperty</a> as argument.</dd><dt class="has-text-weight-normal"><span class="parameter">group</span>  <a href="https://learn.microsoft.com/dotnet/api/system.func-2" target="_blank" rel="noopener noreferrer">Func</a><span id="LST4DC32A8D_9" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="23413828-9a4a-2851-b88b-84d0afcb0031.htm">VCard</a>, <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a><span id="LST4DC32A8D_10" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  (Optional)</dt><dd>A function that returns the identifier of the group of <a href="93f4ddcf-053e-4f78-a4b7-c0ed9ef1e6fd.htm">VCardProperty</a>
            objects, which the <a href="93f4ddcf-053e-4f78-a4b7-c0ed9ef1e6fd.htm">VCardProperty</a> should belong to, or <span class="code">null</span> to indicate that the 
            <a href="93f4ddcf-053e-4f78-a4b7-c0ed9ef1e6fd.htm">VCardProperty</a> does not belong to any group. The function is called with the 
            <a href="3e2b7a12-e0a3-230d-01ba-69b9f3ec3464.htm">VCard</a> instance as argument.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="4254b25b-c39b-3224-d22e-0072642cabb3.htm">VCardBuilder</a><br />The <a href="4254b25b-c39b-3224-d22e-0072642cabb3.htm">VCardBuilder</a> instance that initialized this <a href="30c9180d-cc8b-f5fa-8d6c-2d8b909cdaf7.htm">TimeZoneBuilder</a> to 
            be able to chain calls.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDFCSection">
            This method initializes a new <a href="331347ca-a2a8-8f61-bc94-ef01e6783de3.htm">TimeZoneID</a> instance. Use the overload
            <a href="41010930-97a6-0101-428e-b22f4b9d4e41.htm">Add(TimeZoneID, Action<span id="LST4DC32A8D_11" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>ParameterSection<span id="LST4DC32A8D_12" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST4DC32A8D_13" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>VCard, String<span id="LST4DC32A8D_14" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>
            to reuse an existing one.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDGCSection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.VCards;
using FolkerKinzel.VCards.Enums;
using FolkerKinzel.VCards.Extensions;
using FolkerKinzel.VCards.Models.Properties;

namespace Examples;

public class ExtensionMethodExample
{
    public static void Example()
    {
        VCard vc = InitializeTestVCard();

        Console.WriteLine("The content of vc is:\n");
        Console.WriteLine(vc);
        Console.WriteLine("\n=====================================\n");

        // (The extension methods will do all the necerssary
        // null checking.)

        // Group properties by their group name. (Group names are
        // case insensitive.)
        Console.WriteLine("\nProperty values with the group name g1:");

        IGrouping&lt;string?, KeyValuePair&lt;Prop, VCardProperty&gt;&gt; g1Group =
            vc.Groups.First(x =&gt; x.Key == "g1");

        foreach (KeyValuePair&lt;Prop, VCardProperty&gt; kvp in g1Group)
        {
            Console.WriteLine("  {0}: {1}", kvp.Key, kvp.Value);
        }
        ;

        Console.WriteLine("\nDisplayNames ordered by Preference:");
        foreach (TextProperty dn in vc.DisplayNames.OrderByPref())
        {
            Console.WriteLine("  {0}", dn);
        }

        Console.WriteLine("\nThe most preferred DisplayName is: {0}", vc.DisplayNames.PrefOrNull());

        Console.WriteLine("\nDisplayNames ordered by Index:");
        foreach (TextProperty dn in vc.DisplayNames.OrderByIndex())
        {
            Console.WriteLine("  {0}", dn);
        }

        Console.WriteLine("\nThe DisplayName with the lowest Index is: {0}", vc.DisplayNames.FirstOrNull());

        // Group VCardProperties by their AltID parameter:
        Console.WriteLine("\nThe following display names mean the same in different languages:");

        IGrouping&lt;string?, TextProperty&gt; altIDQuery =
            vc.DisplayNames.GroupByAltID()
                           .First(x =&gt; x.Key == "@1");

        foreach (TextProperty prop in altIDQuery)
        {
            Console.WriteLine("  {0}", prop);
        }

        // Serialize the VCard as VCF. (Most of the methods of the Vcf class are also
        // available as extension methods.)
        Console.WriteLine("\nvc as vCard 3.0:\n");
        Console.WriteLine(vc.ToVcfString(options: VcfOpts.Default.Unset(VcfOpts.UpdateTimeStamp)));
    }

    private static VCard InitializeTestVCard()
    {
        return VCardBuilder
            .Create(setContactID: false)
            .DisplayNames.Add("vCard zum Testen",
                               parameters:
                               p =&gt;
                               {
                                   p.Language = "de";
                                   p.AltID = "@1";
                                   p.Index = 2;
                               }
                             )
            .DisplayNames.Add("vCard for testing",
                               parameters:
                               p =&gt;
                               {
                                   p.Language = "en";
                                   p.AltID = "@1";
                               }
                             )
            .DisplayNames.Add("Something else",
                               parameters: p =&gt; p.Index = 1
                             )
            // The properties of the VCard class that contain collections allow
            // null references within these collections. Extension methods undertake
            // the necessary null checking when reading these properties:
            .DisplayNames.Edit(dplayNames =&gt; dplayNames.Append(null))
            .Phones.Add("1234",
                        // The ParameterSection.PropertyClass property is of Type
                        // Nullable&lt;PCl&gt;. Use extension methods to edit such properties
                        // safely.
                        parameters: p =&gt; p.PropertyClass = p.PropertyClass.Set(PCl.Home),
                        group: vc =&gt; "g1"
                        )
            .TimeZones.Add("Europe/Berlin", group: vc =&gt; "G1")
            .VCard;
    }
}

/*
Console Output:

The content of vc is:

Version: 2.1

[Preference: 1]
[Language: en]
[AltID: @1]
DisplayNames: vCard for testing

[Preference: 2]
[Language: de]
[AltID: @1]
[Index: 2]
DisplayNames: vCard zum Testen

[Index: 1]
DisplayNames: Something else

[Group: G1]
TimeZones: Europe/Berlin

[PropertyClass: Home]
[Group: g1]
Phones: 1234

=====================================


Property values with the group name g1:
  Phones: 1234
  TimeZones: Europe/Berlin

DisplayNames ordered by Preference:
  vCard for testing
  vCard zum Testen
  Something else

The most preferred DisplayName is: vCard for testing

DisplayNames ordered by Index:
  Something else
  vCard zum Testen
  vCard for testing

The DisplayName with the lowest Index is: Something else

The following display names mean the same in different languages:
  vCard for testing
  vCard zum Testen

vc as vCard 3.0:

BEGIN:VCARD
VERSION:3.0
G1.TZ:+01:00
FN;LANGUAGE=en:vCard for testing
N:?;;;;
g1.TEL;TYPE=HOME:1234
END:VCARD
 */</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDHCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.invalidoperationexception" target="_blank" rel="noopener noreferrer">InvalidOperationException</a></td><td>The method has been called on an instance that had 
            been initialized using the default constructor.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="30c9180d-cc8b-f5fa-8d6c-2d8b909cdaf7.htm">TimeZoneBuilder Structure</a></div><div><a href="728033ca-0bec-634d-ec84-54be77113592.htm">Add Overload</a></div><div><a href="30716183-7f69-ceb8-b5fe-4d9f23e7fd2b.htm">FolkerKinzel.VCards.BuilderParts Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>Copyright © 2020 Folker Kinzel</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>